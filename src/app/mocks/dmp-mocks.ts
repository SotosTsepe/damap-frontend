import {Dmp} from '../domain/dmp';
import {ContributorRole} from '../domain/enum/contributor-role.enum';
import {IdentifierType} from '../domain/enum/identifier-type.enum';
import {CostType} from '../domain/enum/cost-type.enum';
import {DataKind} from '../domain/enum/data-kind.enum';
import {ComplianceType} from '../domain/enum/compliance-type.enum';
import {SecurityMeasure} from '../domain/enum/security-measure';
import {Agreement} from '../domain/enum/agreement';
import {mockProject} from './project-mocks';
import {mockContact} from './person-mocks';
import {closedDatasetMock, restrictedDatasetMock} from './dataset-mocks';

export const completeDmp: Dmp = {
  dataRightsAndAccessControl: 'access control',
  humanParticipants: true,
  otherDataSecurityMeasures: 'other measure',
  sensitiveDataAccess: 'sensitive data access',
  closedAccessInfo: 'closed access info',
  committeeReviewed: true,
  contact: mockContact,
  contributors: [
    {
      id: 84, person: {
        firstName: 'Max', id: 85, lastName: 'Mustermann', mbox: 'm.mustermann@university.ac.at', universityId: '12345', personId: null,
        affiliation: 'TU Wien', affiliationId: {identifier: 'XXX', type: IdentifierType.ROR}
      }, role: ContributorRole.Editor
    },
    {
      id: 98,
      person: {
        firstName: 'Anna',
        id: 99,
        lastName: 'Musterfrau',
        mbox: 'm.musterfrau@university.ac.at',
        personId: {
          identifier: '0000-0000-0000-xxxx',
          type: IdentifierType.ORCID
        },
        affiliation: 'TU Wien', affiliationId: {identifier: 'XXX', type: IdentifierType.ROR},
        universityId: '23456'
      },
      role: ContributorRole.ProjectManager
    }
  ],
  costs: [
    {
      currencyCode: 'EUR',
      customType: null,
      description: 'cost description',
      id: 103,
      title: 'New cost',
      type: CostType.database,
      value: 123
    }
  ],
  costsExist: true,
  dataGeneration: 'research data will be generated by conducting a survey',
  dataKind: DataKind.SPECIFY,
  datasets: [closedDatasetMock, restrictedDatasetMock],
  ethicalIssuesExist: true,
  externalStorage: [
    // TODO
    /*{
      hostId: 'TU Files',
      backupFrequency: 'Wien',
      backupLocation: null,
      datasets: [
        '39608ko19edx5'
      ],
      id: null,
      storageLocation: null,
      title: 'OtherStorage',
      url: 'github.com'
    }*/
  ],
  externalStorageInfo: 'because',
  hosts: [
    {
      datasets: [
        '39608knzrof6y', '39608knzrof6x'
      ],
      hostId: 'r3d100013557',
      id: 94,
      title: 'TU Data'
    },
  ],
  id: 76,
  legalRestrictions: true,
  legalRestrictionsComment: 'legally restricted',
  legalRestrictionsDocuments: [Agreement.OTHER],
  otherLegalRestrictionsDocument: 'other document',
  metadata: 'provided metadata',
  noDataExplanation: '',
  personalData: true,
  personalDataCompliance: ['item1', 'item2', ComplianceType.Other],
  otherPersonalDataCompliance: 'other measures',
  project: mockProject,
  restrictedAccessInfo: 'info how someone can access restricted data',
  restrictedDataAccess: 'send form',
  sensitiveData: true,
  sensitiveDataSecurity: [SecurityMeasure.OTHER],
  storage: [
    {
      datasets: [
        '39608knzrof6y', '39608knzrof6x'
      ],
      hostId: '0',
      id: 97,
      title: 'TUfiles',
      // url: 'it.tuwien.ac.at'
    }
  ],
  structure: 'VCS',
  targetAudience: 'students',
  tools: 'proprietary software needed'
};

export const noDataDmp: Dmp = {
  dataRightsAndAccessControl: 'access control',
  humanParticipants: false,
  legalRestrictionsDocuments: [Agreement.CONFIDENTIALITY_AGREEMENT],
  otherDataSecurityMeasures: '',
  otherLegalRestrictionsDocument: '',
  sensitiveDataAccess: 'access',
  closedAccessInfo: 'closed access info',
  committeeReviewed: true,
  contact: mockContact,
  contributors: [
    {
      id: 84, person: {
        firstName: 'Max', id: 85, lastName: 'Mustermann', mbox: 'm.mustermann@university.ac.at', universityId: '12345', personId: null,
        affiliation: 'TU Wien', affiliationId: {identifier: 'XXX', type: IdentifierType.ROR}
      }, role: ContributorRole.Editor
    },
    {
      id: 98,
      person: {
        firstName: 'Anna',
        id: 99,
        lastName: 'Musterfrau',
        mbox: 'm.musterfrau@university.ac.at',
        personId: {
          identifier: '0000-0000-0000-xxxx',
          type: IdentifierType.ORCID
        },
        affiliation: 'TU Wien', affiliationId: {identifier: 'XXX', type: IdentifierType.ROR},
        universityId: '23456'
      },
      role: ContributorRole.ProjectManager
    }
  ],
  costs: [
    {
      currencyCode: 'EUR',
      customType: null,
      description: 'cost description',
      id: 103,
      title: 'New cost',
      type: CostType.database,
      value: 123
    }
  ],
  costsExist: true,
  dataGeneration: 'research data will be generated by conducting a survey',
  dataKind: DataKind.NONE,
  datasets: [closedDatasetMock, restrictedDatasetMock],
  ethicalIssuesExist: false,
  externalStorage: [
    {
      hostId: 'TU Files',
      backupFrequency: 'Wien',
      backupLocation: null,
      datasets: [
        '39608ko19edx5'
      ],
      id: null,
      storageLocation: null,
      title: 'OtherStorage',
      url: 'github.com'
    }
  ],
  externalStorageInfo: 'because',
  hosts: [
    {
      datasets: [
        '39608knzrof6y'
      ],
      hostId: 'r3d100013557',
      id: 94,
      title: 'TU Data'
    },
  ],
  id: 76,
  legalRestrictions: true,
  legalRestrictionsComment: 'legally restricted',
  metadata: 'provided metadata',
  noDataExplanation: '',
  personalData: true,
  personalDataCompliance: ['item1', 'item2'],
  otherPersonalDataCompliance: 'other measures',
  project: mockProject,
  restrictedAccessInfo: 'info how someone can access restricted data',
  restrictedDataAccess: 'send form',
  sensitiveData: true,
  sensitiveDataSecurity: [SecurityMeasure.OTHER],
  storage: [
    {
      datasets: [
        '39608knzrof6y'
      ],
      hostId: '0',
      id: 97,
      title: 'TUfiles',
      // url: 'it.tuwien.ac.at'
    }
  ],
  structure: 'VCS',
  targetAudience: 'students',
  tools: 'proprietary software needed'
};
